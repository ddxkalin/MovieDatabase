@model MovieDatabase.Web.Areas.Admin.Models.Actors.ActorCombinedVM

@{
    ViewBag.Title = "Actors";
    Layout = "_Layout";
    var ConfirmationModalModel = new MovieDatabase.Web.Areas.Admin.Models.ModalVM
    {
        ModalId = "delete-entity-modal",
        ModalTitle = "Confirmation needed",
        ModalMessage = "Are you sure you want to delete the selected entry?",
        SubmitButtonText = "Confirm",
    };
    var ConfirmationRestoreModalModel = new MovieDatabase.Web.Areas.Admin.Models.ModalVM
    {
        ModalId = "restore-entity-modal",
        ModalTitle = "Confirmation needed",
        ModalMessage = "Are you sure you want to restore the selected entry?",
        SubmitButtonText = "Confirm",
    };
}

<partial name="_StatusMessage" model="ViewBag.Alert" />
<partial name="_ConfirmationModal" model="ConfirmationModalModel" />
<partial name="_ConfirmationModal" model="ConfirmationRestoreModalModel" />

<div class="page-intro">
    <h2>Actors</h2>
</div>

<div class="row">
    <form class="col-xs-12 form-custom" method="get" asp-controller="Actors" asp-action="Index" id="filter-form">
        <div class="panel panel-white">
            <div class="panel-body">

                <input type="hidden" name="page" value="@Model.ActorList.CurrentPage" />
                <div class="form-group row">
                    <div class="col-xs-12 col-md-3">
                        <div class="md-input">
                            <label for="name" class="md-input-placeholder">Name</label>
                            <input type="text" id="name" name="name" class="md-input-control" value="@Context.Request.Query["name"]">
                        </div>
                    </div>
                </div>
                <div class="form-group row">
                    <div class="text-right">
                        <button type="submit" class="btn btn-waves btn-primary waves-effect waves-light">
                            Filter
                        </button>
                    </div>
                </div>

            </div>
        </div>

        <div class="text-right mb-0p5">
            <div class="md-input input-inline">
                <label for="pageSize" class="md-input-placeholder">Show</label>
                <select id="pageSize" name="pageSize" class="md-input-control" onchange="$('#filter-form').submit()">
                    <option value="10" selected="@(Context.Request.Query["pageSize"] == "10" ? "selected" : null)">10</option>
                    <option value="20" selected="@(Context.Request.Query["pageSize"] == "20" ? "selected" : null)">20</option>
                    <option value="30" selected="@(Context.Request.Query["pageSize"] == "30" ? "selected" : null)">30</option>
                </select>
            </div>

        </div>

    </form>
</div>

<div class="panel panel-white col-xs-12 col-md-3">
    <div class="panel-heading">
        <div class="panel-title">Add actor</div>
    </div>
    <div class="panel-body">
        <form class="form-custom" method="Post" asp-controller="Actors" asp-action="Create" id="add-entity-form">
            <div class="form-group row mb-2x">
                <div class="col-xs-12">
                    <div class="md-input">
                        <label for="name" class="md-input-placeholder">Name</label>
                        <input asp-for="Actor.Name" class="md-input-control">
                    </div>
                    <span asp-validation-for="Actor.Name" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group row">
                <div class="text-center">
                    <button type="submit" class="btn btn-waves btn-primary waves-effect waves-light">
                        Create
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="panel panel-white col-xs-12 col-md-offset-1 col-md-8">
    <div class="panel-body">
        <div class="table-responsive">
            <table class="table table-hover no-mb">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>CreatedOn</th>
                        <th>Is deleted</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var actor in Model.ActorList.Actors)
                    {
                        <tr>
                            <td>@actor.Name</td>
                            <td>@actor.CreatedOn.ToString("dd/MM/yyyy HH:mm")</td>
                            <td>
                                @if (!actor.IsDeleted)
                                {
                                    <span class='label label-success'>Not deleted</span>
                                }
                                else
                                {
                                    <span class='label label-danger'>Deleted</span>
                                }
                            </td>
                            <td>
                                @if (!actor.IsDeleted)
                                {
                                    <form method="post" asp-controller="Actors" asp-action="Delete" id="deleteActorForm-@actor.Id">
                                        <input type="hidden" value="@actor.Id" name="actorId" />
                                        <a href="#" data-toggle="modal" data-target="#@ConfirmationModalModel.ModalId" data-form="#deleteActorForm-@actor.Id"><i class="fa fa-trash-o"></i></a>
                                    </form>
                                }
                                else
                                {
                                    <form method="post" asp-controller="Actors" asp-action="Restore" id="restoreActorForm-@actor.Id">
                                        <input type="hidden" value="@actor.Id" name="actorId" />
                                        <a href="#" data-toggle="modal" data-target="#@ConfirmationRestoreModalModel.ModalId" data-form="#restoreActorForm-@actor.Id"><i class="fa fa-eye"></i></a>
                                    </form>
                                }
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>
    </div>
</div>

@if (Model.ActorList.ShowPagination)
{
    <nav aria-label="Page navigation" class="col-md-offset-4">
        <ul class="pagination no-mt mb">
            <li>
                <a href="@Url.Action("Index", "Actors", new {
                                               page = Model.ActorList.PreviousPage,
                                               pageSize = Context.Request.Query["pageSize"],
                                               name = Context.Request.Query["name"],
                                           })" class="pagination-prev" aria-label="Previous"></a>
            </li>
            @for (int i = 1; i <= Model.ActorList.TotalPages; i++)
            {
                if (i == Model.ActorList.CurrentPage)
                {
                    <li class="active">
                        <a href="@Url.Action("Index", "Actors", new {
                                               page = i,
                                               pageSize = Context.Request.Query["pageSize"],
                                               name = Context.Request.Query["name"],
                                           })">
                            @i
                        </a>
                    </li>
                }
                else
                {
                    <li>
                        <a href="@Url.Action("Index", "Actors", new {
                                               page = i,
                                               pageSize = Context.Request.Query["pageSize"],
                                               name = Context.Request.Query["name"],
                                           })">
                            @i
                        </a>
                    </li>
                }
            }

            <li>
                <a href="@Url.Action("Index", "Actors", new {
                                               page = Model.ActorList.NextPage,
                                               pageSize = Context.Request.Query["pageSize"],
                                               name = Context.Request.Query["name"],
                                           })" class="pagination-next" aria-label="Next"></a>
            </li>
        </ul>
    </nav>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
