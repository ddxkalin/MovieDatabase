@model MovieDatabase.Web.Areas.Admin.Models.Posts.PostListVM

@{
    ViewBag.Title = "Posts";
    Layout = "_Layout";
    var ConfirmationModalModel = new MovieDatabase.Web.Areas.Admin.Models.ModalVM
    {
        ModalId = "delete-entity-modal",
        ModalTitle = "Confirmation needed",
        ModalMessage = "Are you sure you want to delete the selected entry?",
        SubmitButtonText = "Confirm",
    };
    var ConfirmationRestoreModalModel = new MovieDatabase.Web.Areas.Admin.Models.ModalVM
    {
        ModalId = "restore-entity-modal",
        ModalTitle = "Confirmation needed",
        ModalMessage = "Are you sure you want to restore the selected entry?",
        SubmitButtonText = "Confirm",
    };
}

<partial name="_StatusMessage" model="ViewBag.Alert" />
<partial name="_ConfirmationModal" model="ConfirmationModalModel" />
<partial name="_ConfirmationModal" model="ConfirmationRestoreModalModel" />

<div class="page-intro">
    <h2>Posts</h2>
</div>

<div class="row">
    <form class="form-custom col-xs-12" method="get" asp-controller="Posts" asp-action="Index" id="filter-form">
        <div class="panel panel-white">
            <div class="panel-body">

                <input type="hidden" name="page" value="@Model.CurrentPage" />
                <div class="form-group row">
                    <div class="col-xs-12 col-md-3">
                        <div class="md-input">
                            <label for="movieName" class="md-input-placeholder">Movie name</label>
                            <input type="text" id="movieName" name="movieName" class="md-input-control" value="@Context.Request.Query["movieName"]">
                        </div>
                    </div>
                </div>
                <div class="form-group row">
                    <div class="text-right">
                        <button type="submit" class="btn btn-waves btn-primary waves-effect waves-light">
                            Filter
                        </button>
                    </div>
                </div>

            </div>
        </div>

        <div class="text-right mb-0p5">
            <div class="md-input input-inline">
                <label for="pageSize" class="md-input-placeholder">Show</label>
                <select id="pageSize" name="pageSize" class="md-input-control" onchange="$('#filter-form').submit()">
                    <option value="10" selected="@(Context.Request.Query["pageSize"] == "10" ? "selected" : null)">10</option>
                    <option value="20" selected="@(Context.Request.Query["pageSize"] == "20" ? "selected" : null)">20</option>
                    <option value="30" selected="@(Context.Request.Query["pageSize"] == "30" ? "selected" : null)">30</option>
                </select>
            </div>

        </div>

    </form>
</div>

<div class="panel panel-white">
    <div class="panel-body">
        <div class="table-responsive">
            <table class="table table-hover no-mb">
                <thead>
                    <tr>
                        <th>Post name</th>
                        <th>Movie name</th>
                        <th>Movie slug</th>
                        <th>Created on</th>
                        <th>Is deleted</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var post in Model.Posts)
                    {
                        <tr>
                            <td>@post.Name</td>
                            <td>@post.Movie.Name</td>
                            <td>@post.Movie.Slug</td>
                            <td>@post.CreatedOn.ToString("dd/MM/yyyy HH:mm")</td>
                            <td>
                                @if (!post.IsDeleted)
                                {
                                    <span class='label label-success'>Not deleted</span>
                                }
                                else
                                {
                                    <span class='label label-danger'>Deleted</span>
                                }
                            </td>
                            <td>
                                @if (!post.IsDeleted)
                                {
                                    <form method="post" asp-controller="Posts" asp-action="Delete" id="deletePostForm-@post.Id">
                                        <input type="hidden" value="@post.Id" name="postId" />
                                        <a href="#" data-toggle="modal" data-target="#@ConfirmationModalModel.ModalId" data-form="#deletePostForm-@post.Id"><i class="fa fa-trash-o"></i></a>
                                    </form>
                                }
                                else
                                {
                                    <form method="post" asp-controller="Posts" asp-action="Restore" id="restorePostForm-@post.Id">
                                        <input type="hidden" value="@post.Id" name="postId" />
                                        <a href="#" data-toggle="modal" data-target="#@ConfirmationRestoreModalModel.ModalId" data-form="#restorePostForm-@post.Id"><i class="fa fa-eye"></i></a>
                                    </form>
                                }
                            </td>
                            <td><a asp-area="" asp-controller="Posts" asp-action="Post" asp-route-id="@post.Id">To movie</a></td>

                        </tr>
                    }

                </tbody>
            </table>
        </div>
    </div>
</div>

@if (Model.ShowPagination)
{
    <nav aria-label="Page navigation">
        <ul class="pagination no-mt mb">
            <li>
                <a href="@Url.Action("Index", "Posts", new {
                                               page = Model.PreviousPage,
                                               pageSize = Context.Request.Query["pageSize"],
                                               usernameEmail = Context.Request.Query["movieName"],
                                           })" class="pagination-prev" aria-label="Previous"></a>
            </li>
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                if (i == Model.CurrentPage)
                {
                    <li class="active">
                        <a href="@Url.Action("Index", "Posts", new {
                                               page = i,
                                               pageSize = Context.Request.Query["pageSize"],
                                               usernameEmail = Context.Request.Query["movieName"],
                                           })">
                            @i
                        </a>
                    </li>
                }
                else
                {
                    <li>
                        <a href="@Url.Action("Index", "Posts", new {
                                               page = i,
                                               pageSize = Context.Request.Query["pageSize"],
                                               usernameEmail = Context.Request.Query["movieName"],
                                           })">
                            @i
                        </a>
                    </li>
                }
            }

            <li>
                <a href="@Url.Action("Index", "Posts", new {
                                               page = Model.NextPage,
                                               pageSize = Context.Request.Query["pageSize"],
                                               usernameEmail = Context.Request.Query["movieName"],
                                           })" class="pagination-next" aria-label="Next"></a>
            </li>
        </ul>
    </nav>
}

